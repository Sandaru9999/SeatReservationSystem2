// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeatReservationSystem2.Models;

#nullable disable

namespace SeatReservationSystem2.Migrations
{
    [DbContext(typeof(SeatReservationContext))]
    [Migration("20240831142206_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SeatReservationSystem2.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SeatReservationSystem2.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SeatId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SeatId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("SeatReservationSystem2.Models.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"));

                    b.Property<bool>("IsReserved")
                        .HasColumnType("bit");

                    b.HasKey("SeatId");

                    b.ToTable("Seats");

                    b.HasData(
                        new
                        {
                            SeatId = 1,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 2,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 3,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 4,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 5,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 6,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 7,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 8,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 9,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 10,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 11,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 12,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 13,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 14,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 15,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 16,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 17,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 18,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 19,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 20,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 21,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 22,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 23,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 24,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 25,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 26,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 27,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 28,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 29,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 30,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 31,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 32,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 33,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 34,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 35,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 36,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 37,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 38,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 39,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 40,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 41,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 42,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 43,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 44,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 45,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 46,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 47,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 48,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 49,
                            IsReserved = false
                        },
                        new
                        {
                            SeatId = 50,
                            IsReserved = false
                        });
                });

            modelBuilder.Entity("SeatReservationSystem2.Models.Reservation", b =>
                {
                    b.HasOne("SeatReservationSystem2.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeatReservationSystem2.Models.Seat", "Seat")
                        .WithMany()
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Seat");
                });
#pragma warning restore 612, 618
        }
    }
}
